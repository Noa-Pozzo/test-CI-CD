name: Tests
on:
  push:
  workflow_dispatch:

jobs:

  bluid:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: composer install --prefer-dist --no-dev
      - name: blc 
        env:
          XDEBUG_MODE: coverage

      - name: update
        run: sudo apt update
      
      # let's get started!
      - name: Checkout
        uses: actions/checkout@v3
  
      # cache PHP extensions
      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ runner.os }}-${{ env.extensions-cache-key }}
  
      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ runner.os }}-${{ env.extensions-cache-key }}
  
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
  
      # Setup GitHub CI PHP problem matchers
      # https://github.com/shivammathur/setup-php#problem-matchers
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
  
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
  
      # composer cache
      - name: Remove composer lock
        run: rm composer.lock
  
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      # http://man7.org/linux/man-pages/man1/date.1.html
      # https://github.com/actions/cache#creating-a-cache-key
      - name: Get Date
        id: get-date
        run: echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash
  
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-${{ steps.get-date.outputs.date }}-
  
      # composer installation
      - name: Setup PHPunit
        run: composer install -n
  
      - name: Install Google Cloud Storage
        run: composer require google/cloud-storage
  
      # testing
      - name: Run unit tests
        run: ../vendor/bin/phpunit --coverage-cobertura=resultat.xml
        working-directory: tst
        
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./tst/log/coverage-cobertura.xml
          format: markdown
          badge: true
          output: both
          
      - run: cat ./tst/log/coverage-cobertura.xml
      
      - name: Adding markdown
        run: cat ./tst/log/coverage-cobertura.xml > $GITHUB_STEP_SUMMARY
